syntax = "proto3";

package SpaceX.API.Device;

option go_package = "spacex.com/api/device";

message DeviceInfo {
	optional string id = 1 [json_name="id"];
	optional string hardware_version = 2 [json_name="hardwareVersion"];
	optional string software_version = 3 [json_name="softwareVersion"];
	optional string country_code = 4 [json_name="countryCode"];
}

message DeviceState {
	optional uint64 uptime_s = 1 [json_name="uptimeS"];
}

message SignedData {
	optional bytes data = 1 [json_name="data"];
	optional bytes signature = 2 [json_name="signature"];
}

message GetNextIdRequest {
}

message GetNextIdResponse {
	optional uint64 id = 1 [json_name="id"];
	optional uint64 epoch_id = 2 [json_name="epochId"];
}

message PingTarget {
	optional string service = 1 [json_name="service"];
	optional string location = 2 [json_name="location"];
	optional string address = 3 [json_name="address"];
}

message PingResult {
	optional .SpaceX.API.Device.PingTarget target = 3 [json_name="target"];
	optional float dropRate = 1 [json_name="dropRate"];
	optional float latencyMs = 2 [json_name="latencyMs"];
}

message BondingChallenge {
	optional string dish_id = 1 [json_name="dishId"];
	optional string wifi_id = 2 [json_name="wifiId"];
	optional bytes nonce = 3 [json_name="nonce"];
}

message AuthenticateRequest {
	optional .SpaceX.API.Device.SignedData challenge = 1 [json_name="challenge"];
}

message ChallengeResponse {
	optional bytes signature = 1 [json_name="signature"];
	optional bytes certificate_chain = 2 [json_name="certificateChain"];
}

